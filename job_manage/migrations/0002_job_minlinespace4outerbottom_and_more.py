# Generated by Django 4.0.4 on 2022-10-28 10:44

import django.core.validators
from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0005_mytag'),
        ('job_manage', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='job',
            name='minLineSpace4outerBottom',
            field=models.FloatField(blank=True, help_text='背面外层的最小线距(单位:mil)', null=True, verbose_name='背面外层最小线距'),
        ),
        migrations.AddField(
            model_name='job',
            name='minLineSpace4outerTop',
            field=models.FloatField(blank=True, help_text='正面外层的最小线距(单位:mil)', null=True, verbose_name='正面外层最小线距'),
        ),
        migrations.AddField(
            model_name='job',
            name='minLineWidth4outerBottom',
            field=models.FloatField(blank=True, help_text='背面外层的最小线宽(单位:mil)', null=True, verbose_name='背面外层最小线宽'),
        ),
        migrations.AddField(
            model_name='job',
            name='minLineWidth4outerTop',
            field=models.FloatField(blank=True, help_text='正面外层的最小线宽(单位:mil)', null=True, verbose_name='正面外层最小线宽'),
        ),
        migrations.AlterField(
            model_name='job',
            name='impLineNum',
            field=models.IntegerField(blank=True, help_text='阻抗线数', null=True, validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)], verbose_name='阻抗线数'),
        ),
        migrations.AlterField(
            model_name='job',
            name='pcsDrlNum',
            field=models.IntegerField(blank=True, help_text='所有孔层的所有孔数量(包括槽孔,镭射孔等)', null=True, validators=[django.core.validators.MaxValueValidator(100000000), django.core.validators.MinValueValidator(0)], verbose_name='pcs所有孔数'),
        ),
        migrations.AlterField(
            model_name='job',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='必填', through='job_manage.TaggedWhatever', to='taggit.MyTag', verbose_name='Tags'),
        ),
    ]
