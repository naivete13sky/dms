"""
Django settings for dms project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ia1^b6peicmd8a3v0-^!$+u^cz_o%v6=u5(fh&i7moxz!zh2#z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
SITE_ID = 3
#这里将我们的应用放在应用列表的最前边，原因是：我们稍后会为自己的应用编写验证系统的模板，
# Django内置的验证系统自带了一套模板，如此设置可以让我们的模板覆盖其他应用中的模板设置。
# Django按照INSTALLED_APPS中的顺序寻找模板。
INSTALLED_APPS = [
    'account.apps.AccountConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog.apps.BlogConfig',
    'job_manage.apps.JobManageConfig',
    'back_stage.apps.BackStageConfig',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'taggit',
    'project.apps.ProjectConfig',
    # 'djmoney',#RemovedInDjango41Warning: 'djmoney' defines default_app_config = 'djmoney.apps.MoneyConfig'. Django now detects this configuration automatically.You can remove default_app_config.app_config = AppConfig.create(entry)
    'order.apps.OrderConfig',
    'process.apps.ProcessConfig',
    'rest_framework',
    'restful_api.apps.RestfulApiConfig',
    'corsheaders',
    'casbin_adapter.apps.CasbinAdapterConfig',


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # CORS
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
]

ROOT_URLCONF = 'dms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'dms',
        # 'NAME': 'ep_develop',
        'USER': 'postgres',
        'PASSWORD': 'cc',
        # 'HOST': '10.97.80.118',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-Hans'
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True

# USE_L10N = True# RemovedInDjango50Warning: The USE_L10N setting is deprecated. Starting with Django 5.0, localized formatting of data will always be enabled. For example Django will display numbers and dates using the format of the current locale.warnings.warn(USE_L10N_DEPRECATED_MSG, RemovedInDjango50Warning)

# USE_TZ = True
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# 当运行 python manage.py collectstatic 的时候
# STATIC_ROOT 文件夹 是用来将所有STATICFILES_DIRS中所有文件夹中的文件，以及各app中static中的文件都复制过来
# 把这些文件放到一起是为了用apache等部署的时候更方便
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

# 其它 存放静态文件的文件夹，可以用来存放项目中公用的静态文件，里面不能包含 STATIC_ROOT
# 如果不想用 STATICFILES_DIRS 可以不用，都放在 app 里的 static 中也可以
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "common_static"),
    #'/path/to/others/static/',  # 用不到的时候可以不写这一行
)

# 这个是默认设置，Django 默认会在 STATICFILES_DIRS中的文件夹 和 各app下的static文件夹中找文件
# 注意有先后顺序，找到了就不再继续找了
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder"
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


LOGIN_REDIRECT_URL = 'dashboard'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'


#EMAIL_BACKEND是用的本地email服务，会在cmd窗口中模拟，不是真的发邮件，如果要真的发，是要配置的
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#下面用的465端口，阿里云可以用的
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'chen320821@163.com' # 帐号
# EMAIL_HOST_PASSWORD =  'angela123.163'  # 密码
EMAIL_HOST_PASSWORD =  'CZZLYIRGEDHOTHWA'  # 密码
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

'''
CORS_ORIGIN_ALLOW_ALL如果为True，则接收所有非同源请求。
与此相反。默认为False，False情况下仅在CORS_ORIGIN_WHITELIST名单中源才允许访问，源组成为访问协议+host+端口号
CORS_ORIGIN_WHITELIST，非同源白名单
'''
CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8000',
)

#g环境
# G_GETWAY_PATH=r"C:\cc\python\epwork\dms\job_manage\g\gateway.exe"
G_GETWAY_PATH=os.path.join(BASE_DIR,r"job_manage\g\gateway.exe")
#项目根目录
# PROJECT_PATH=r'C:\cc\python\epwork\dms'

#ep_cam路径
# EP_CAM_PATH=r'C:\cc\ep_local\product\EP-CAM\version\20220826\EP-CAM_beta_2.28.054_s22_jiami\Release'
# EP_CAM_PATH=r'C:\cc\ep_local\product\EP-CAM\version\20220907\EP-CAM_beta_2.28.054_s26_jiami\Release'
# EP_CAM_PATH=r'C:\cc\ep_local\product\EP-CAM\version\20220909\EP-CAM_beta_2.28.054_s28_jiami\Release'
# EP_CAM_PATH=r'C:\cc\ep_local\product\EP-CAM\version\20220916\EP-CAM_beta_2.28.054_s30_jiami\Release'
EP_CAM_PATH=r'C:\cc\ep_local\product\EP-CAM\version\20220916\EP-CAM_beta_2.28.054_s32_jiami\Release'

#权限管理，用casbin
CASBIN_MODEL = os.path.join(BASE_DIR, 'casbin.conf')
