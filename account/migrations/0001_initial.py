# Generated by Django 4.0.4 on 2022-10-18 17:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_full', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='客户全称')),
                ('name_simple', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='客户简称')),
                ('department', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='部门')),
                ('country', models.CharField(blank=True, max_length=256, null=True, verbose_name='国家')),
                ('province', models.CharField(blank=True, max_length=256, null=True, verbose_name='省份')),
                ('city', models.CharField(blank=True, max_length=256, null=True, verbose_name='城市')),
                ('customer_type', models.CharField(blank=True, choices=[('pcb_factory', '板厂'), ('design_customer', '设计端客户')], default='pcb_factory', max_length=20, null=True, verbose_name='客户类型')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='备注')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='QueryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_job_file_usage_type', models.CharField(blank=True, choices=[('all', '所有'), ('input_test', '导入测试'), ('customer_job', '客户资料'), ('test', '测试'), ('else', '其它')], default='all', help_text='此用户筛选条件记录用的', max_length=20, null=True, verbose_name='筛选-料号使用类型')),
                ('query_job_job_name', models.CharField(blank=True, help_text='此用户筛选条件记录用的', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='筛选-料号名')),
                ('query_job_author', models.CharField(blank=True, help_text='此用户筛选条件记录用的', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='筛选-负责人')),
                ('query_job_from_object', models.CharField(blank=True, help_text='此用户筛选条件记录用的', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='筛选-料号来源')),
                ('query_job_from_object_pcb_factory', models.CharField(blank=True, help_text='此用户筛选条件记录用的', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=0)], verbose_name='筛选-料号来源-板厂')),
                ('query_job_paginator_page', models.IntegerField(blank=True, default=10, help_text='每页显示行数', null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(5)], verbose_name='query_job_paginator_page')),
                ('query_job_file_odb_current', models.CharField(blank=True, choices=[('all', '所有'), ('no', '无'), ('yes', '有')], default='all', help_text='此用户筛选条件记录用的', max_length=20, null=True, verbose_name='筛选-是否存在悦谱最新转图')),
                ('query_job_status', models.CharField(blank=True, choices=[('all', '所有'), ('draft', '草稿'), ('published', '正式')], default='all', help_text='此用户筛选条件记录用的', max_length=20, null=True, verbose_name='筛选-状态')),
                ('query_job_vs_result_g', models.CharField(blank=True, choices=[('all', '所有'), ('passed', '通过'), ('failed', '未通过'), ('none', '未比对')], default='all', help_text='此用户筛选条件记录用的', max_length=20, null=True, verbose_name='筛选-G软件比图结果')),
                ('remark', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=3)], verbose_name='备注')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_query_data_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'db_table': 'account_query_data',
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='user/%Y/%m/%d/')),
                ('mobile', models.CharField(blank=True, max_length=11, validators=[django.core.validators.MinLengthValidator(limit_value=11)], verbose_name='手机号')),
                ('cam_level', models.CharField(blank=True, choices=[('level1', '等级1'), ('level2', '等级2'), ('level3', '等级3'), ('level4', '等级4'), ('level5', '等级5')], max_length=10, null=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('recommender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_recommender', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='FactoryRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_rule_name', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(limit_value=3)], verbose_name='厂规名称')),
                ('remark', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=3)], verbose_name='备注')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_factory_rule_user', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'db_table': 'factory_rule',
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='CustomerRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_rule_name', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(limit_value=3)], verbose_name='客规名称')),
                ('remark', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=3)], verbose_name='备注')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_customer_rule_user', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'db_table': 'customer_rule',
                'ordering': ('-publish',),
            },
        ),
    ]
